#
# Actions...
#
MENU_SYSTEM=Système
MENU_PROJECT=Projet
MENU_RECENT=Fichiers récents
MENU_HELP=Aide
NEW=Nouveau
OPEN=Ouvrir...
SAVE=Sauver
SAVE_AS=Sauver sous...
EXIT=Quitter
COMPILE=Compiler...
RUNEXE=Lancer l'exécutable...
ABOUT=A propos...
#
# Texts from the panels...
#
SKELETONCHOOSER_LABEL=Sélection des squelettes
SKELETONCHOOSER_HELP=Un skelette est un conteneur vide chargé de lancer votre application. Chaque squelette a un comportement propre lorsqu'il s'agit de lancer l'application java, de rechercher ou lancer les JVM (machines virtuelles java), et de l'action à effectuer lorsqu'aucune JVM n'est trouvée.<p> Choisissez votre squelette en fonction des besoins de votre application java.
EXECUTABLE_LABEL=Binaire exécutable
EXECUTABLE_HELP=Indiquez le nom à donner à votre exécutable. <br>Il doit finir par ".exe" de manière à être correctement reconnu par Windows. Par exemple <tt>monprogramme.exe</tt>.
CURRENTDIR_LABEL=Répertoire de travail
CURRENTDIR_HELP=Sélectionnez le répertoire qui sera considéré comme le répertoire de travail (également appelé "répertoire courant") par votre application. <p>Vous pouvez laisser ce champ vide si votre application n'en a pas besoin ou si la valeur par défaut vous convient (celle-ci étant le répertoire d'où l'exécutable a été lancé). <p> Un exemple courant d'utilisation de ce paramètre est de remonter d'un niveau à la racine du répertoire d'installation de votre application, lorsque l'exécutable se trouve dans un sous-répertoire <tt>bin/</tt>. <p> <b>ATTENTION</b>: Contrairement aux autres fichiers et répertoires d'un projet JSmooth, qui sont tous relatifs au fichier projet (.jsmooth), celui-ci est relatif au répertoire courant de l'application. <br> Par exemple, si vous mettez la valeur <tt>..</tt> ou <tt>un/autre/repertoire</tt>, le lanceur changera le répertoire de travail de votre application relativement au chemin courant. <p> Vous pouvez également utiliser le mot clé  ${EXECUTABLEPATH}, qui sera remplacé au lancement par le répertoire où se situe l'exécutable.
CURRENTDIR_FORCEEXEPATH=Force le répertoire de l'exécutable comme répertoire courant. 
CURRENTDIR_FORCEEXEPATH_HELP=Si cette option est cochée, JSmooth définit le répertoire où se trouve l'exécutable comme répertoire courant au démarrage. <p> Ceci est équivalent au mot clé ${EXECUTABLEPATH} positionné dans le champ texte.
SKELETONPROPERTIES_LABEL=Propriétés du squelette
SKELETONPROPERTIES_HELP=Les champs ci-contre vous permettent de spécialiser le comportement du squelette de lancement utilisé.
ICONLOCATION_LABEL=Icone de l'exécutable
ICONLOCATION_HELP=Vous pouvez optionnellement sélectionner une icone (image de type .ico) qui sera compilée avec votre exécutable. <p> Bien qu'il soit vivement conseillé d'utiliser des fichiers .ico (format natif attendu par Windows), les fichiers aux formats <tt>JPEG</tt> et <tt>PNG</tt> sont acceptés par le compilateur, au détriment d'une qualité d'image amoindrie par la procédure de réduction des couleurs éventuellement appliquée.
ARGUMENTS_LABEL=Arguments de l'application
ARGUMENTS_HELP=Des arguments peuvent être passés à l'application lors de son démarrage. <br> Cette option vous permet d'indiquer des arguments par défaut, qui seront passés à l'application <u>si aucun argument n'est spécifié</u> par l'utilisateur.
EMBEDDEDJAR_LABEL=Jar embarqué dans l'exécutable
EMBEDDEDJAR_HELP=Vous pouvez incorporer un fichier JAR dans l'exécutable compilé. Ce JAR est extrait par l'exécutable à chaque démarrage de l'application, et permet de créer un programme unique contenant l'ensemble des resources nécessaires au démarrage. <br> Il est conseillé néanmoins de garder ce jar aussi léger que possible, de manière à ne pas pénaliser les performances du démarrage (ce jar est toujours chargé en mémoire lors du lancement de l'application).
EMBEDDEDJAR_CHECKBOX=Utiliser un jar embarqué
CLASSPATH_LABEL=Classpath (chemin des classes)
CLASSPATH_HELP=Indiquez ici le classpath à utiliser par votre application java. <p> Vous pouvez sélectionner des fichiers JAR ou ZIP, ainsi que des répertoires de classe. <p> L'ordre du classpath est conservé lors de l'instanciation de la JVM.
MINVERSION_LABEL=Version minimale de Java
MINVERSION_HELP=Indiquez ici la version <b>minimum</b> de Java qui soit requise par votre application pour son fonctionnement. <p> Par exemple <tt>1.2</tt> ou <tt>1.4.2</tt> sont des valeurs couramment utilisées.
MAXVERSION_LABEL=Version maximale de Java
MAXVERSION_HELP=Spécifiez ici la version <b>maximale</b> de Java sur laquelle votre application doit fonctionner. <p> Dans la plupart des cas, il n'est pas nécessaire de renseigner ce champ, Java assurant une très bonne compatibilité ascendante. Cependant, dans certains cas, vous pouvez être amené à n'accepter qu'une version particulière de Java, dans ce cas vous pouvez indiquer la version maximale acceptée par le squelette lanceur d'application. <p> <b>Note</b>: Pour limiter votre application à toute version de Java 1.2 (par exemple), il vaut mieux spécifier <tt>1.2.999</tt> comme valeur maximale, de manière à ce que toutes les révision 1.2.xx soient acceptées (1.2 est équivalent strictement à 1.2.0 pour JSmooth).
MAINCLASS_LABEL=Classe principale
MAINCLASS_HELP=Choisissez une classe principale, parmi celles disponibles dans le classpath.
JVMBUNDLE_LABEL=JVM couplée à votre application
JVMBUNDLE_CHECKBOX=Utiliser une JVM fournie par votre application
JVMBUNDLE_HELP=Utilisez cette option lorsque vous incluez une JVM complète avec la distribution de votre application. <p> Si vous livrez une JVM, par exemple dans un sous-répertoire de votre application, vous pouvez spécifier ici son chemin d'accès. Dans ce cas, le squelette de lancement court-circuitera la recherche normale de Java sur l'ordinateur de l'utilisateur, et utilisera le chemin spécifié. <p> <b>Attention</b>: Cette option ne permet pas d'inclure une JVM dans l'exécutable compilé (ce qui serait une très mauvaise idée), mais seulement de spécifier une JRE que vous installez avec votre application, ou qui se trouve à un endroit défini à l'avance (par exemple sur un réseau local d'entreprise).
JVMSEARCH_LABEL=Séquence de recherche de JVM
JVMSEARCH_HELP=Vous pouvez spécifier l'ordre dans lequel les JVM sont recherchées sur l'ordinateur de l'utilisateur. <p> Par défaut, la recherche s'effectue d'abord sur la base de registre, puis en utilisant les variables d'environnement standard, puis dans la variable PATH, avant de finalement vérifier si JView est installé (si Java 1.1 ou 1.0 est accepté par votre application). <p> La séquence par défaut fournit une recherche optimale pour la plupart des utilisateurs, vous pouvez cependant modifier l'ordonnancement de la recherche en déplaçant les élements vers le haut ou vers le bas (les éléments prioritaires se trouvant en haut).
MAXMEMORY_LABEL=Mémoire maximum
MAXMEMORY_HELP=La mémoire maximum que la JVM est autorisée à allouer. La valeur par défaut dépend des implémentations de java, mais elle est souvent de 64Mo ou 128Mo. Si votre application consomme beaucoup de mémoire, vous aurez probablement besoin de mettre une valeur supérieure.
UNIT_MB=Mo
UNIT_KB=Ko
UNIT_BYTE=o
INITIALMEMORY_LABEL=Mémoire initiale allouée
INITIALMEMORY_HELP=Les JVM se lancent généralement avec peu de mémoire allouée. <br> Si votre application effectue un grand nombre d'allocations mémoire lors de son démarrage, vous pouvez améliorer les performances en augmentant la quantité de mémoire initialement allouée par la JVM (évitant ainsi une succession d'allocations par la JVM).
JAVAPROP_LABEL=Propriété java
JAVAPROP_HELP=Vous pouvez spécifier des variables d'environnement passées à la machine virtuelle java lors de son démarrage. <p> Ces variables sont généralement récupérée en utilisant la méthode <tt>System.getProperty()</tt>.
JAVAPROP_DIALOG_TITLE=Edition d'une variable d'environnement java
JAVAPROP_DIALOG_LABEL=Propriété
JAVAPROP_NAME=Nom
JAVAPROP_VALUE=Valeur
JAVAPROP_DIALOG_HELP=Les propriétés Java (ou variables d'environnement Java) sont passées à la JVM lors de son lancement et sont accessibles en utilisant la méthode <tt>System.getProperty()</tt>. <p> De plus, le champ <tt>Valeur</tt> peut contenir des valeurs spécifiques qui sont interprétées par le squelette de lancement:<p> <ul><li>Des variables d'environnement du système: Si vous indiquez dans <tt>Valeur</tt> une chaine de la forme <tt>%ENV%</tt>, l'exécutable remplacera au démarrage cette variable d'environnement par son contenu, défini au niveau du système d'exploitation de l'utilisateur </li> <br> <li>JSmooth reconnait égalements certaines variables spéciales: <tt>${EXECUTABLEPATH}</tt>, <tt>${EXECUTABLENAME}</tt>, <tt>${COMPUTERNAME}</tt>, <tt>${VMSELECTION}</tt>, <tt>${VMSPAWNTYPE}</tt>.<p> Pour plus de renseignements sur ces variables, référez-vous à la documentation de JSmooth.</li></ul>
COMPILATION_DIALOG_TITLE=Fenêtre de compilation
#
# Misc texts
#
UNKNOWN_SKEL=Le squelette sélectionné est inconnu.
#
# GUI LABELS
#
GUI_LABEL_EXECUTABLE_SETTINGS=Paramètrages de l'exécutable
GUI_LABEL_APPLICATION_SETTINGS=Paramètrages de l'application
GUI_LABEL_EMBEDDEDJAR_SETTINGS=Paramètrages du jar embarqué
GUI_LABEL_JAVA_VERSION=Paramètrages de la version
GUI_LABEL_BUNDLEDJRE=Paramètrage de JVM co-installée
GUI_LABEL_MEMORYSETTINGS=Paramètrages de la mémoire

#
# SKELETON TEXTS
#
SKEL_CHOOSER_NONE=aucun
SKEL_AUTODOWNLOAD_PROPERTY_DESCRIPTION=Ce squelette permet de lancer des <b>applications graphiques</b>. <ul><li>Aucune console d'entrée/sortie ne s'affiche</li><li>Si aucune JVM n'est trouvée, l'exécutable propose à l'utilisateur de télécharger et installer une JVM en utilisant le service d'auto-installation de Sun.</li></ul> Des arguments peuvent être passés à l'application (soit en utilisant le mécanisme d'arguments par défaut de JSmooth, soit en utilisant les raccourcis Windows).
SKEL_AUTODOWNLOAD_PROPERTY_MESSAGE_DESCRIPTION=Quand aucune JVM n'est trouvée sur l'ordinateur de l'utilisateur, ce dernier se voit proposer le téléchargement d'une JVM en utilisant ce message.
SKEL_AUTODOWNLOAD_PROPERTY_MESSAGE_LABEL=Message
SKEL_AUTODOWNLOAD_PROPERTY_DLURL_DESCRIPTION=Une URL du service Auto Download de Sun, permettant de téléchargement un installateur de JVM. Choisissez la version maximale supportée par votre application (généralement la plus récente).
SKEL_AUTODOWNLOAD_PROPERTY_DLURL_LABEL=JVM à télécharger
#
SKEL_GENERIC_PROPERTY_SINGLEPROCESS_DESCRIPTION=Le comportement par défaut du squelette est de lancer l'application java dans un processus différent (détaché). Si vous souhaitez forcer le lanceur à utiliser le même processus que l'exécutable, activez cette option. <p> Lorsque cette option est activée, JSmooth tentera toujours d'instancier une machine virtuelle java en utilisant la DLL (généralement jvm.dll) fournie par la JVM de Sun. Dans ce cas, un seul processus apparaitra pour votre application dans la liste des processus de l'ordinateur.
SKEL_GENERIC_PROPERTY_SINGLEPROCESS_LABEL=Lancer java dans le même processus
SKEL_GENERIC_PROPERTY_DEBUG_DESCRIPTION=Activer la console de débogage JSmooth
SKEL_GENERIC_PROPERTY_DEBUG_LABEL=Console de débogage

#
SKEL_CUSTOMDOWNLOAD_DESCRIPTION=Ce squelette permet de lancer des <b>applications graphiques</b>. <ul><li>Aucune console d'entrée/sortie ne s'affiche</li><li>Si aucune JVM n'est trouvée, l'exécutable propose à l'utilisateur de télécharger un fichier depuis le Web.</li><li>L'URL utilisée pour le téléchargement doit être précisée dans le squelette. L'URL peut pointer sur un fichier de type .exe, .cab, ou n'importe quel autre type reconnu par Windows. </li></ul> <p> Notez que certains pare-feux d'entreprise filtrent les fichiers exécutables. <p> Des arguments peuvent être passés à l'application (soit en utilisant le mécanisme d'arguments par défaut de JSmooth, soit en utilisant les raccourcis Windows).
SKEL_CUSTOMDOWNLOAD_PROPERTY_MESSAGE_DESCRIPTION=Lorsqu'aucune JVM n'est trouvée sur l'ordinateur, l'utilisateur se voit proposer le téléchargement par le message défini ci-contre.
SKEL_CUSTOMDOWNLOAD_PROPERTY_MESSAGE_LABEL=Message
SKEL_CUSTOMDOWNLOAD_PROPERTY_URL_DESCRIPTION=URL d'un fichier à télécharger puis exécuter. Cette URL doit commencer par http://, https://, ou ftp://...
SKEL_CUSTOMDOWNLOAD_PROPERTY_URL_LABEL=URL
#
SKEL_CONSOLEWRAPPER_DESCRIPTION=Ce squelette permet de lancer des <b>applications en console</b>. <ul><li>Les E/S standard et d'erreur sont disponibles et affichées à l'utilisateur</li><li>Si aucune JVM n'est trouvée, un message est affiché sur la console</li></ul> Bien qu'il soit destiné principalement à lancer des applications utilisant la console (lancées à partir du shell cmd ou command.com par exemple), il peut être utilisé pour lancer des applications graphiques ayant besoin d'une console de sortie. Dans ce dernier cas, toutes les sorties (de System.out et System.err) sont affichées dans une console DOS.
SKEL_CUSTOMWRAPPER_PROPERTY_MESSAGE_DESCRIPTION=Lorsqu'aucune JVM n'est trouvée sur l'ordinateur de l'utilisateur, le message indiqué dans ce champ est affiché sur la console.
SKEL_CUSTOMWRAPPER_PROPERTY_MESSAGE_LABEL=Message

SKEL_CUSTOMWRAPPER_PROPERTY_KEYPRESS_DESCRIPTION=Si cette option est activée, l'exécutable attend que l'utilisateur appuie sur une touche de la console avant de refermer l'application.
SKEL_CUSTOMWRAPPER_PROPERTY_KEYPRESS_LABEL=Appuie sur une touche

SKEL_SIMPLEWRAPPER_DESCRIPTION=Ce squelette permet de lancer des <b>applications graphiques</b>. <ul><li>Aucune console d'entrée/sortie ne s'affiche</li><li>Si aucune JVM n'est trouvée, l'exécutable propose à l'utilisateur de lancer le navigateur par défaut et d'afficher une page prédéfini.</li><li>L'URL affichée doit être précisée dans le squelette. </li></ul> <p> Des arguments peuvent être passés à l'application (soit en utilisant le mécanisme d'arguments par défaut de JSmooth, soit en utilisant les raccourcis Windows).
SKEL_SIMPLEWRAPPER_PROPERTY_MESSAGE_DESCRIPTION=Lorsqu'aucune JVM n'est trouvée sur l'ordinateur, ce message est affiché afin de proposer à l'utilisateur d'être redirigé vers une page web.
SKEL_SIMPLEWRAPPER_PROPERTY_MESSAGE_LABEL=Message
SKEL_SIMPLEWRAPPER_PROPERTY_URL_DESCRIPTION=Si l'utilisateur répond positivement, son  navigateur est lancé sur cette URL. L'URL doit commencer par <tt>http://...</tt>
SKEL_SIMPLEWRAPPER_PROPERTY_URL_LABEL=URL

#
#
SKEL_WINSERVICE_DESCRIPTION=Ce squelette permet de lancer des <b>Services Windows</b> \
<ul><li>Le lanceur est un service Windows standard <li>La JVM est instanciée en utilisant la DLL native, par conséquent le service apparait sous son nom d'exécutable dans la liste des tâches de Windows (et non sous une appellation générique "java.exe") <li> Aucune console d'E/S n'est affichée, mais un fichier de logs est disponible <li> Si java n'est pas trouvé, une alerte de type pop-up est affichée à l'utilisateur. </ul> \
Ce lanceur transforme votre application java en service windows. Son comportement est très simple, la classe principale (contenant une méthode statique "main") est appelé lorsque le service démarre, et l'application se termine lorsque le service se met à l'arret. <p> Lors de l'arret, le lanceur appelle la méthode <tt>java.lang.System.exit()</tt>, ce qui permet à l'application de quitter proprement en utilisant un hook d'arrêt (voir <tt>Runtime.addShutdownHook()</tt>).
SKEL_WINSERVICE_NAME_LABEL=Nom du service
SKEL_WINSERVICE_NAME_DESCRIPTION=Un nom interne utilisé pour le service Windows. La taille maximale du nom est de 256 caractères, et il ne doit comporter ni slash ni anti-slash. Ce champ est obligatoire.
SKEL_WINSERVICE_DISPLAYNAME_LABEL=Nom d'affichage
SKEL_WINSERVICE_DISPLAYNAME_DESCRIPTION=Le contenu de ce champ est affiché par les interfaces graphiques de Windows qui listent les services. S'il n'est pas défini, c'est le nom interne du service qui est utilisé.
SKEL_WINSERVICE_DESCRIPTION_LABEL=Description
SKEL_WINSERVICE_DESCRIPTION_DESCRIPTION=Specify here a description of the service, to be displayed by user interface programs.
SKEL_WINSERVICE_PROPERTY_MESSAGE_LABEL=Message Java non-trouvé
SKEL_WINSERVICE_PROPERTY_MESSAGE_DESCRIPTION=Ce message s'affiche dans une pop-up d'alerte lorsque le lanceur tente de démarrer l'application, mais qu'aucune JVM n'est disponible sur l'ordinateur de l'utilisateur. <p> The message ne s'affiche qu'au démarrage du service, l'installation ne nécessitant pas de JVM pour fonctionner.
SKEL_WINSERVICE_AUTOSTART_LABEL=Démarrage auto
SKEL_WINSERVICE_AUTOSTART_DESCRIPTION=Activez cette option si vous souhaitez que votre service soit automatiquement démarré par Windows lors du démarrage du système. <p> Si cette option est déactivée, le service devra être lancé manuellement.
SKEL_WINSERVICE_LOGFILE_LABEL=Fichier de logs
SKEL_WINSERVICE_LOGFILE_DESCRIPTION=Définissez ici le nom du fichier de logs du service. The fichier est toujours situé dans le même répertoire que l'exécutable.
SKEL_WINSERVICE_INTERACTIVE_LABEL=Service interactif
SKEL_WINSERVICE_INTERACTIVE_DESCRIPTION=Activez cette option si votre service doit être autorisé par Windows à effectuer des interactions graphiques avec le bureau de l'utilisateur. <p> Pour des raisons des sécurité, Microsoft recommande de plutôt utiliser une approche client-serveur pour rajouter une interface graphique au service. Notez également que si votre service se lance automatiquement au démarrage du système, le bureau peut ne pas être disponible pour l'application.

#
GENERAL_CANTOPENFILE=JSmooth n'a pas pu ouvrir le fichier demandé
GENERAL_ERROR_LABEL=Erreur

JSMOOTH_WELCOME_SCREEN=<h1>JSmooth version @{VERSION}@ @{RELEASEINFO}@</h1>\
<h2>Merci d'utiliser JSmooth!</h2>\
Le project JSmooth est distribué sous licence GNU GPL (General Public License). Merci de lire le fichier License.txt (inclus). Les logiciels tiers fournis avec JSmooth peuvent avoir une license différente, merci de le vérifier si vous les redistribuez. \
<p> Les executables créés par JSmooth (autrement dit, les lanceurs d'application) sont distribués sous licence LGPL avec une exception dite "runtime exception", similaire à celle de GCC: il n'est pas nécessaire de fournir le code source ni de publier une notice de copyright mentionnant jsmooth. Cela vous permet de distribuer sans contrainte les exécutables de vos applications. <br> \
<ul> \
<li> Pour obtenir les dernières nouveautés sur JSmooth, vous pouvez visiter le  <a href="http://jsmooth.sourceforge.net/">site web</a> \
<li> Vous pouvez trouver les informations spécifiques à cette version de JSmooth en consultant soit le fichier <a href="Readme.txt">Readme.txt</a>, soit le <a href="Changelog.txt">Changelog</a>. \
<li> La documentation est disponible en anglais aux formats <a href="docs/jsmooth-doc.html">HTML</a> et <a href="docs/jsmooth-doc.pdf">PDF</a>. \
<li> Merci de lire les détails de <a href="LICENSE.txt">la licence de ce logiciel</a>. Vous pouvez également consulter la <a href="GPL-LICENSE.txt">licence GPL</a> (pour JSmooth) ou la <a href="LGPL-LICENSE.txt">licence LGPL</a> (pour le code source des executables). \
<li> Vous pouvez également utiliser <a href="docs/jniapi/index.html">l'API JNI de JSmooth</a> pour accéder à certaines fonctions spécifiques de Windows depuis votre application java.\
</ul><h2>Support utilisateurs</h2> \
Si vous rencontrez un bug, merci de le soumettre au <a href="http://sourceforge.net/tracker/?group_id=86730">tracker de jsmooth</a>. Si vous avez des questions sur l'utilisation de JSmooth, n'hésitez pas à utiliser <a href="http://sourceforge.net/forum/?group_id=86730">le forum</a> (anglais) sur sourceforge.
#
#
SKEL_GENERIC_SINGLEINSTANCE=Instance unique de l'application
SKEL_GENERIC_SINGLEINSTANCE_DESCRIPTION=Si cette option est activée, une seule instance de l'application peut être démarrée. <p> Si l'instance unique de l'application est déjà lancée, sa fenêtre (s'il y en a une) s'affiche au premier plan.
#
SKEL_GENERIC_JNISMOOTH=Utiliser les classes JNI de JSmooth
SKEL_GENERIC_JNISMOOTH_DESCRIPTION=JSmooth peut mettre à disposition de votre application certaines classes offrant un accès à des fonctions natives de Windows, qui ne sont normalement pas accessible depuis Java. Pour avoir accès à ces fonctionnalité, activez cette option.
